# Generated by Django 4.2.25 on 2025-10-15 08:35

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotToken',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='places', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Traveler',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('phone_number', models.CharField(max_length=32)),
                ('telegram_handle', models.CharField(blank=True, max_length=150)),
                ('telegram_id', models.CharField(max_length=150, unique=True)),
                ('extra_info', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('registration_start', models.DateField()),
                ('registration_end', models.DateField()),
                ('trip_start', models.DateField()),
                ('trip_end', models.DateField()),
                ('default_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_capacity', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('registration', 'Registration'), ('upcoming', 'Upcoming'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=16)),
                ('announce_in_channel', models.BooleanField(default=True)),
                ('bonus_message', models.CharField(blank=True, max_length=255)),
                ('custom_announcement_text', models.TextField(blank=True)),
                ('group_chat_id', models.CharField(blank=True, help_text='Telegram chat identifier (e.g. -1001234567890) where confirmed travelers should be added.', max_length=128)),
                ('group_invite_link', models.URLField(blank=True, help_text='Optional static invite link shared with travelers after payment confirmation.')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trips', to='core.place')),
            ],
            options={
                'ordering': ['-trip_start'],
            },
        ),
        migrations.CreateModel(
            name='TripAnnouncement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered', models.BooleanField(default=False)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip_announcements', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='core.trip')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='PlacePhoto',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='place_photos/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.place')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('transport', 'Transport'), ('accommodation', 'Accommodation'), ('food', 'Food'), ('activity', 'Activity'), ('other', 'Other')], default='other', max_length=32)),
                ('description', models.TextField(blank=True)),
                ('incurred_at', models.DateField()),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_expenses', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='core.trip')),
            ],
            options={
                'ordering': ['-incurred_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserTrip',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=16)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected')], default='pending', max_length=16)),
                ('quoted_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_note', models.TextField(blank=True)),
                ('payment_proof', models.FileField(blank=True, upload_to='payment_proofs/')),
                ('payment_proof_uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('custom_bonus_message', models.CharField(blank=True, max_length=255)),
                ('admin_comment', models.TextField(blank=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('group_joined_at', models.DateTimeField(blank=True, null=True)),
                ('group_join_error', models.TextField(blank=True)),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_user_trips', to=settings.AUTH_USER_MODEL)),
                ('traveler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_trips', to='core.traveler')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_trips', to='core.trip')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('trip', 'traveler')},
            },
        ),
    ]
